{"ast":null,"code":"import { ConsoleLogger } from '../../Logger/ConsoleLogger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('getClientInfo');\nfunction getClientInfo() {\n  if (typeof window === 'undefined') {\n    return {};\n  }\n  return browserClientInfo();\n}\nfunction browserClientInfo() {\n  if (typeof window === 'undefined') {\n    logger.warn('No window object available to get browser client info');\n    return {};\n  }\n  const nav = window.navigator;\n  if (!nav) {\n    logger.warn('No navigator object available to get browser client info');\n    return {};\n  }\n  const {\n    platform,\n    product,\n    vendor,\n    userAgent,\n    language\n  } = nav;\n  const type = getBrowserType(userAgent);\n  const timezone = browserTimezone();\n  return {\n    platform,\n    make: product || vendor,\n    model: type.type,\n    version: type.version,\n    appVersion: [type.type, type.version].join('/'),\n    language,\n    timezone\n  };\n}\nfunction browserTimezone() {\n  const tzMatch = /\\(([A-Za-z\\s].*)\\)/.exec(new Date().toString());\n  return tzMatch ? tzMatch[1] || '' : '';\n}\nfunction getBrowserType(userAgent) {\n  // The latest user agents for Opera: https://www.whatismybrowser.com/guides/the-latest-user-agent/opera\n  const operaMatch = /.+(Opera[\\s[A-Z]*|OPR[\\sA-Z]*)\\/([0-9.]+).*/i.exec(userAgent);\n  if (operaMatch) {\n    return {\n      type: operaMatch[1],\n      version: operaMatch[2]\n    };\n  }\n  // The latest user agents for Edge: https://www.whatismybrowser.com/guides/the-latest-user-agent/edge\n  const ieMatch = /.+(Trident|Edge|Edg|EdgA|EdgiOS)\\/([0-9.]+).*/i.exec(userAgent);\n  if (ieMatch) {\n    return {\n      type: ieMatch[1],\n      version: ieMatch[2]\n    };\n  }\n  // The latest user agents for web browsers on Firefox and Chrome\n  // https://www.whatismybrowser.com/guides/the-latest-user-agent/firefox\n  // https://www.whatismybrowser.com/guides/the-latest-user-agent/chrome\n  const cfMatch = /.+(Chrome|CriOS|Firefox|FxiOS)\\/([0-9.]+).*/i.exec(userAgent);\n  if (cfMatch) {\n    return {\n      type: cfMatch[1],\n      version: cfMatch[2]\n    };\n  }\n  // The latest user agents for Safari: https://www.whatismybrowser.com/guides/the-latest-user-agent/safari\n  const sMatch = /.+(Safari)\\/([0-9.]+).*/i.exec(userAgent);\n  if (sMatch) {\n    return {\n      type: sMatch[1],\n      version: sMatch[2]\n    };\n  }\n  const awkMatch = /.+(AppleWebKit)\\/([0-9.]+).*/i.exec(userAgent);\n  if (awkMatch) {\n    return {\n      type: awkMatch[1],\n      version: awkMatch[2]\n    };\n  }\n  const anyMatch = /.*([A-Z]+)\\/([0-9.]+).*/i.exec(userAgent);\n  if (anyMatch) {\n    return {\n      type: anyMatch[1],\n      version: anyMatch[2]\n    };\n  }\n  return {\n    type: '',\n    version: ''\n  };\n}\nexport { getClientInfo };\n//# sourceMappingURL=getClientInfo.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}