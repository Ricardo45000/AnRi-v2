{"ast":null,"code":"import { Framework } from '../types.mjs';\nimport { reactWebDetect, reactSSRDetect } from './React.mjs';\nimport { vueWebDetect, vueSSRDetect } from './Vue.mjs';\nimport { svelteWebDetect, svelteSSRDetect } from './Svelte.mjs';\nimport { nextWebDetect, nextSSRDetect } from './Next.mjs';\nimport { nuxtWebDetect, nuxtSSRDetect } from './Nuxt.mjs';\nimport { angularWebDetect, angularSSRDetect } from './Angular.mjs';\nimport { reactNativeDetect } from './ReactNative.mjs';\nimport { expoDetect } from './Expo.mjs';\nimport { webDetect } from './Web.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// These are in the order of detection where when both are detectable, the early Framework will be reported\nconst detectionMap = [\n// First, detect mobile\n{\n  platform: Framework.Expo,\n  detectionMethod: expoDetect\n}, {\n  platform: Framework.ReactNative,\n  detectionMethod: reactNativeDetect\n},\n// Next, detect web frameworks\n{\n  platform: Framework.NextJs,\n  detectionMethod: nextWebDetect\n}, {\n  platform: Framework.Nuxt,\n  detectionMethod: nuxtWebDetect\n}, {\n  platform: Framework.Angular,\n  detectionMethod: angularWebDetect\n}, {\n  platform: Framework.React,\n  detectionMethod: reactWebDetect\n}, {\n  platform: Framework.VueJs,\n  detectionMethod: vueWebDetect\n}, {\n  platform: Framework.Svelte,\n  detectionMethod: svelteWebDetect\n}, {\n  platform: Framework.WebUnknown,\n  detectionMethod: webDetect\n},\n// Last, detect ssr frameworks\n{\n  platform: Framework.NextJsSSR,\n  detectionMethod: nextSSRDetect\n}, {\n  platform: Framework.NuxtSSR,\n  detectionMethod: nuxtSSRDetect\n}, {\n  platform: Framework.ReactSSR,\n  detectionMethod: reactSSRDetect\n}, {\n  platform: Framework.VueJsSSR,\n  detectionMethod: vueSSRDetect\n}, {\n  platform: Framework.AngularSSR,\n  detectionMethod: angularSSRDetect\n}, {\n  platform: Framework.SvelteSSR,\n  detectionMethod: svelteSSRDetect\n}];\nfunction detect() {\n  return detectionMap.find(detectionEntry => detectionEntry.detectionMethod())?.platform || Framework.ServerSideUnknown;\n}\nexport { detect };\n//# sourceMappingURL=index.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}