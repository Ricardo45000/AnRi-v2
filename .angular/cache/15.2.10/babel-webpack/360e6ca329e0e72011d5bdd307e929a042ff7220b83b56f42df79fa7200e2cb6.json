{"ast":null,"code":"import _asyncToGenerator from \"/Users/ricardoda-silva/Desktop/Project/RiAn/AnRi v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthserviceService } from 'environments/airtable/authservice.service';\nimport { Amplify } from 'aws-amplify';\nimport awsconfig from 'aws-export';\nimport { signIn } from '@aws-amplify/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"environments/airtable/authservice.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ngx-translate/core\";\nimport * as i4 from \"@aws-amplify/ui-angular\";\nimport * as i5 from \"@angular/common\";\nfunction AmazonComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function AmazonComponent_ng_template_16_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const user_r1 = restoredCtx.user;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.signIn(user_r1.signInDetails.loginId));\n    });\n    i0.ɵɵtext(1, \"Call Method\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function AmazonComponent_ng_template_16_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const signOut_r2 = restoredCtx.signOut;\n      return i0.ɵɵresetView(signOut_r2());\n    });\n    i0.ɵɵtext(3, \"Sign Out\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"/dashboard\"];\n};\nexport let AmazonComponent = /*#__PURE__*/(() => {\n  class AmazonComponent {\n    element;\n    authService;\n    router;\n    translate;\n    test = new Date();\n    toggleButton;\n    sidebarVisible;\n    username = '';\n    password = '';\n    loading = false;\n    selectedLanguage;\n    constructor(element, authService, router, translate) {\n      this.element = element;\n      this.authService = authService;\n      this.router = router;\n      this.translate = translate;\n      this.sidebarVisible = false;\n      this.translate.setDefaultLang(\"en\");\n      Amplify.configure(awsconfig);\n    }\n    services = {\n      handleSignIn(formData) {\n        var _this = this;\n        return _asyncToGenerator(function* () {\n          const {\n            username,\n            password\n          } = formData;\n          try {\n            const user = yield signIn({\n              username,\n              password\n            });\n            if (user) {\n              // Check if sign-in was successful\n              _this.router.navigate(['/dashboard']); // Redirect to dashboard\n            }\n\n            return user;\n          } catch (error) {\n            console.error('Sign-in error:', error);\n            // Handle sign-in errors\n          }\n        })();\n      }\n    };\n\n    checkFullPageBackgroundImage() {\n      var $page = $('.full-page');\n      var image_src = $page.data('image');\n      if (image_src !== undefined) {\n        var image_container = '<div class=\"full-page-background\" style=\"background-image: url(' + image_src + ') \"/>';\n        $page.append(image_container);\n      }\n    }\n    ngOnInit() {\n      this.authService.disconnect();\n      this.checkFullPageBackgroundImage();\n      var body = document.getElementsByTagName('body')[0];\n      body.classList.add('lock-page');\n      var navbar = this.element.nativeElement;\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n      setTimeout(function () {\n        // after 1000 ms we add the class animated to the login/register card\n        $('.card').removeClass('card-hidden');\n      }, 700);\n    }\n    ngOnDestroy() {\n      var body = document.getElementsByTagName('body')[0];\n      body.classList.remove('lock-page');\n    }\n    sidebarToggle() {\n      var toggleButton = this.toggleButton;\n      var body = document.getElementsByTagName('body')[0];\n      var sidebar = document.getElementsByClassName('navbar-collapse')[0];\n      if (this.sidebarVisible == false) {\n        setTimeout(function () {\n          toggleButton.classList.add('toggled');\n        }, 500);\n        body.classList.add('nav-open');\n        this.sidebarVisible = true;\n      } else {\n        this.toggleButton.classList.remove('toggled');\n        this.sidebarVisible = false;\n        body.classList.remove('nav-open');\n      }\n    }\n    signIn(username) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        console.log(_this2.username);\n        _this2.authService.signinwithamazon(username).subscribe(authenticated => {\n          if (authenticated) {\n            _this2.router.navigate(['/dashboard']);\n            _this2.showNotification(\"top\", \"center\", \"success\", \"Authentification done\");\n          } else {\n            _this2.showNotification(\"top\", \"center\", \"warning\", \"Wrong combinaison. Try Again\");\n          }\n          _this2.loading = false;\n        });\n      })();\n    }\n    showNotification(from, align, type, message) {\n      $.notify({\n        icon: \"ti-gift\",\n        message: message\n      }, {\n        type: type,\n        timer: 1,\n        placement: {\n          from: from,\n          align: align\n        },\n        template: '<div data-notify=\"container\" class=\"col-11 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\"><button type=\"button\" aria-hidden=\"true\" class=\"close\" data-notify=\"dismiss\"><i class=\"nc-icon nc-simple-remove\"></i></button><span data-notify=\"icon\" class=\"nc-icon nc-bell-55\"></span> <span data-notify=\"title\">{1}</span> <span data-notify=\"message\">{2}</span><div class=\"progress\" data-notify=\"progressbar\"><div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div></div><a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a></div>'\n      });\n    }\n    static ɵfac = function AmazonComponent_Factory(t) {\n      return new (t || AmazonComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.AuthserviceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.TranslateService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AmazonComponent,\n      selectors: [[\"amazon-cmp\"]],\n      decls: 24,\n      vars: 10,\n      consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-absolute\", \"fixed-top\", \"navbar-transparent\"], [1, \"container\"], [1, \"navbar-wrapper\"], [1, \"navbar-toggle\", 3, \"click\"], [\"type\", \"button\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-bar\", \"bar1\"], [1, \"navbar-toggler-bar\", \"bar2\"], [1, \"navbar-toggler-bar\", \"bar3\"], [\"routerLinkActive\", \"active\", 1, \"navbar-brand\", 3, \"routerLink\"], [1, \"wrapper\", \"wrapper-full-page\"], [\"filter-color\", \"black\", \"data-image\", \"./assets/img/bg/bruno-abatti.jpg\", 1, \"full-page\", \"lock-page\", \"section-image\"], [1, \"content\"], [1, \"container\", 2, \"margin-top\", \"-2%\"], [3, \"services\"], [\"amplifySlot\", \"authenticated\"], [1, \"footer\", \"footer-black\", \"footer-white\"], [1, \"row\"], [1, \"credits\", \"ml-auto\"], [1, \"copyright\"], [3, \"click\"]],\n      template: function AmazonComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵlistener(\"click\", function AmazonComponent_Template_div_click_3_listener() {\n            return ctx.sidebarToggle();\n          });\n          i0.ɵɵelementStart(4, \"button\", 4);\n          i0.ɵɵelement(5, \"span\", 5)(6, \"span\", 6)(7, \"span\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"a\", 8);\n          i0.ɵɵtext(9);\n          i0.ɵɵpipe(10, \"translate\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10)(13, \"div\", 11)(14, \"div\", 12)(15, \"amplify-authenticator\", 13);\n          i0.ɵɵtemplate(16, AmazonComponent_ng_template_16_Template, 4, 0, \"ng-template\", 14);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(17, \"footer\", 15)(18, \"div\", 1)(19, \"div\", 16)(20, \"div\", 17)(21, \"span\", 18);\n          i0.ɵɵtext(22);\n          i0.ɵɵpipe(23, \"date\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(9, _c0));\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(10, 4, \"LoginPage\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"services\", ctx.services);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate1(\" \\u00A9 \", i0.ɵɵpipeBind2(23, 6, ctx.test, \"yyyy\"), \", made by Rian \");\n        }\n      },\n      dependencies: [i2.RouterLink, i2.RouterLinkActive, i4.AmplifySlotDirective, i4.AuthenticatorComponent, i5.DatePipe, i3.TranslatePipe],\n      encapsulation: 2\n    });\n  }\n  return AmazonComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}