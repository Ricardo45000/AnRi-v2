{"ast":null,"code":"import _asyncToGenerator from \"/Users/ricardoda-silva/Desktop/Project/RiAn/AnRi v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ElementRef } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthserviceService } from 'environments/airtable/authservice.service';\nimport ClipboardJS from 'clipboard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"environments/airtable/authservice.service\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = [\"myModal\"];\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    translate;\n    myQrCode;\n    myModal;\n    constructor(translate, authService) {\n      this.translate = translate;\n      this.translate.setDefaultLang('en');\n      const storedLang = localStorage.getItem('selectedLanguage');\n      translate.use(storedLang || translate.getDefaultLang());\n      this.myQrCode = authService.myQrCode;\n    }\n    ngAfterViewInit() {\n      this.initializeClipboard();\n    }\n    switchLanguage(language) {\n      this.translate.use(language);\n      localStorage.setItem('selectedLanguage', language);\n    }\n    printModalContent() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const printWindow = window.open('', '_blank');\n        const imgElement = new Image();\n        const blob = yield fetch(_this.myQrCode).then(response => response.blob());\n        const imgUrl = URL.createObjectURL(blob);\n        imgElement.onload = () => {\n          printWindow.document.write('<html><head><title>Print</title>');\n          printWindow.document.write('<style>');\n          printWindow.document.write('body { display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; }');\n          printWindow.document.write('</style>');\n          printWindow.document.write('</head><body>');\n          printWindow.document.write('<img src=\"' + imgUrl + '\" style=\"max-width: 100%; max-height: 100%;\" />');\n          printWindow.document.write('</body></html>');\n          printWindow.document.close();\n          printWindow.print();\n          printWindow.close();\n          // Revoke the Object URL to free up resources\n          URL.revokeObjectURL(imgUrl);\n        };\n        imgElement.src = imgUrl;\n      })();\n    }\n    initializeClipboard() {\n      const clipboard = new ClipboardJS('#copyButton', {\n        text: () => {\n          // Return the content to be copied (image URL)\n          return this.myQrCode;\n        }\n      });\n      clipboard.on('success', e => {\n        if (this.translate.currentLang == 'de') {\n          this.showNotification(\"top\", \"center\", \"success\", \"URL kopiert\");\n        } else {\n          if (this.translate.currentLang == 'fr') {\n            this.showNotification(\"top\", \"center\", \"success\", \"URL copié\");\n          } else {\n            this.showNotification(\"top\", \"center\", \"success\", \"URL copied\");\n          }\n        }\n        // You can add any additional feedback or actions here\n      });\n\n      clipboard.on('error', e => {\n        console.error('Failed to copy text to clipboard:', e.text);\n        console.error('Action:', e.action);\n        console.error('Trigger:', e.trigger);\n        // You can handle errors here\n      });\n    }\n\n    showNotification(from, align, type, message) {\n      $.notify({\n        icon: \"ti-gift\",\n        message: message\n      }, {\n        type: type,\n        timer: 1,\n        placement: {\n          from: from,\n          align: align\n        },\n        template: '<div data-notify=\"container\" class=\"col-11 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\"><button type=\"button\" aria-hidden=\"true\" class=\"close\" data-notify=\"dismiss\"><i class=\"nc-icon nc-simple-remove\"></i></button><span data-notify=\"icon\" class=\"nc-icon nc-bell-55\"></span> <span data-notify=\"title\">{1}</span> <span data-notify=\"message\">{2}</span><div class=\"progress\" data-notify=\"progressbar\"><div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div></div><a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a></div>'\n      });\n    }\n    static ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.AuthserviceService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      viewQuery: function AppComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myModal = _t.first);\n        }\n      },\n      decls: 15,\n      vars: 4,\n      consts: [[\"id\", \"hiddenTextArea\", 2, \"position\", \"absolute\", \"left\", \"-9999px\"], [\"id\", \"myModal\", \"data-backdrop\", \"false\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [\"id\", \"myQrCode\", 1, \"modal-body\"], [\"alt\", \"Modal Image\", 1, \"img-fluid\", 3, \"src\"], [1, \"modal-footer\", \"justify-content-center\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-success\", \"w-25\", \"mr-10\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"w-25\", 3, \"click\"], [\"type\", \"button\", \"id\", \"copyButton\", \"data-clipboard-target\", \"#myQrCode\", 1, \"btn\", \"btn-success\", \"w-25\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"router-outlet\")(1, \"textarea\", 0);\n          i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4);\n          i0.ɵɵelement(6, \"img\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"button\", 7);\n          i0.ɵɵtext(9, \"OK\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_10_listener() {\n            return ctx.printModalContent();\n          });\n          i0.ɵɵtext(11);\n          i0.ɵɵpipe(12, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"button\", 9);\n          i0.ɵɵtext(14, \"Copy\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵpropertyInterpolate(\"src\", ctx.myQrCode, i0.ɵɵsanitizeUrl);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 2, \"Print\"));\n        }\n      },\n      dependencies: [i3.RouterOutlet, i1.TranslatePipe]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}