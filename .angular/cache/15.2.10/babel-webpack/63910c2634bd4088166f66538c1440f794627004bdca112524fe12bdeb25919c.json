{"ast":null,"code":"import { createAssertionFunction } from '../../../errors/createAssertionFunction.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AuthConfigurationErrorCode = /*#__PURE__*/(() => {\n  (function (AuthConfigurationErrorCode) {\n    AuthConfigurationErrorCode[\"AuthTokenConfigException\"] = \"AuthTokenConfigException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolAndIdentityPoolException\"] = \"AuthUserPoolAndIdentityPoolException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolException\"] = \"AuthUserPoolException\";\n    AuthConfigurationErrorCode[\"InvalidIdentityPoolIdException\"] = \"InvalidIdentityPoolIdException\";\n    AuthConfigurationErrorCode[\"OAuthNotConfigureException\"] = \"OAuthNotConfigureException\";\n  })(AuthConfigurationErrorCode || (AuthConfigurationErrorCode = {}));\n  return AuthConfigurationErrorCode;\n})();\nconst authConfigurationErrorMap = {\n  [AuthConfigurationErrorCode.AuthTokenConfigException]: {\n    message: 'Auth Token Provider not configured.',\n    recoverySuggestion: 'Make sure to call Amplify.configure in your app.'\n  },\n  [AuthConfigurationErrorCode.AuthUserPoolAndIdentityPoolException]: {\n    message: 'Auth UserPool or IdentityPool not configured.',\n    recoverySuggestion: 'Make sure to call Amplify.configure in your app with UserPoolId and IdentityPoolId.'\n  },\n  [AuthConfigurationErrorCode.AuthUserPoolException]: {\n    message: 'Auth UserPool not configured.',\n    recoverySuggestion: 'Make sure to call Amplify.configure in your app with userPoolId and userPoolClientId.'\n  },\n  [AuthConfigurationErrorCode.InvalidIdentityPoolIdException]: {\n    message: 'Invalid identity pool id provided.',\n    recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.'\n  },\n  [AuthConfigurationErrorCode.OAuthNotConfigureException]: {\n    message: 'oauth param not configured.',\n    recoverySuggestion: 'Make sure to call Amplify.configure with oauth parameter in your app.'\n  }\n};\nconst assert = createAssertionFunction(authConfigurationErrorMap);\nexport { AuthConfigurationErrorCode, assert };\n//# sourceMappingURL=errorHelpers.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}