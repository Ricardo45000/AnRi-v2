{"ast":null,"code":"import _asyncToGenerator from \"/Users/ricardoda-silva/Desktop/Project/RiAn/AnRi v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport '../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../utils/retry/retry.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { parseMetadata } from '../../clients/serde/responseInfo.mjs';\nimport { parseJsonError, parseJsonBody } from '../../clients/serde/json.mjs';\nimport { composeServiceApi } from '../../clients/internal/composeServiceApi.mjs';\nimport { defaultConfig, cognitoIdentityTransferHandler, buildHttpRpcRequest, getSharedHeaders } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getCredentialsForIdentitySerializer = (input, endpoint) => {\n  const headers = getSharedHeaders('GetCredentialsForIdentity');\n  const body = JSON.stringify(input);\n  return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getCredentialsForIdentityDeserializer = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (response) {\n    if (response.statusCode >= 300) {\n      const error = yield parseJsonError(response);\n      throw error;\n    } else {\n      const body = yield parseJsonBody(response);\n      return {\n        IdentityId: body.IdentityId,\n        Credentials: deserializeCredentials(body.Credentials),\n        $metadata: parseMetadata(response)\n      };\n    }\n  });\n  return function getCredentialsForIdentityDeserializer(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst deserializeCredentials = ({\n  AccessKeyId,\n  SecretKey,\n  SessionToken,\n  Expiration\n} = {}) => {\n  return {\n    AccessKeyId,\n    SecretKey,\n    SessionToken,\n    Expiration: Expiration && new Date(Expiration * 1000)\n  };\n};\n/**\n * @internal\n */\nconst getCredentialsForIdentity = composeServiceApi(cognitoIdentityTransferHandler, getCredentialsForIdentitySerializer, getCredentialsForIdentityDeserializer, defaultConfig);\nexport { getCredentialsForIdentity };\n//# sourceMappingURL=getCredentialsForIdentity.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}