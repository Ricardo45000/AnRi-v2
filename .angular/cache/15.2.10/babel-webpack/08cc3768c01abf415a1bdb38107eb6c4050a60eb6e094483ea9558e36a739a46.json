{"ast":null,"code":"import { AmplifyError } from '../../errors/AmplifyError.mjs';\nimport '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getCrypto = () => {\n  if (typeof window === 'object' && typeof window.crypto === 'object') {\n    return window.crypto;\n  }\n  // Next.js global polyfill\n  if (typeof crypto === 'object') {\n    return crypto;\n  }\n  throw new AmplifyError({\n    name: 'MissingPolyfill',\n    message: 'Cannot resolve the `crypto` function from the environment.'\n  });\n};\nconst getBtoa = () => {\n  // browser\n  if (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n    return window.btoa;\n  }\n  // Next.js global polyfill\n  if (typeof btoa === 'function') {\n    return btoa;\n  }\n  throw new AmplifyError({\n    name: 'Base64EncoderError',\n    message: 'Cannot resolve the `btoa` function from the environment.'\n  });\n};\nconst getAtob = () => {\n  // browser\n  if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n    return window.atob;\n  }\n  // Next.js global polyfill\n  if (typeof atob === 'function') {\n    return atob;\n  }\n  throw new AmplifyError({\n    name: 'Base64EncoderError',\n    message: 'Cannot resolve the `atob` function from the environment.'\n  });\n};\nexport { getAtob, getBtoa, getCrypto };\n//# sourceMappingURL=index.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}