{"ast":null,"code":"import _asyncToGenerator from \"/Users/ricardoda-silva/Desktop/Project/RiAn/AnRi v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { updateUserAttributes as updateUserAttributes$1 } from '../utils/clients/CognitoIdentityProvider/index.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { toAttributeType } from '../utils/apiHelpers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Updates user's attributes while authenticated.\n *\n * @param input - The UpdateUserAttributesInput object\n * @returns UpdateUserAttributesOutput\n * @throws - {@link UpdateUserAttributesException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst updateUserAttributes = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (input) {\n    const {\n      userAttributes,\n      options\n    } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const clientMetadata = options?.clientMetadata;\n    assertTokenProviderConfig(authConfig);\n    const {\n      tokens\n    } = yield fetchAuthSession({\n      forceRefresh: false\n    });\n    assertAuthTokens(tokens);\n    const {\n      CodeDeliveryDetailsList\n    } = yield updateUserAttributes$1({\n      region: getRegion(authConfig.userPoolId),\n      userAgentValue: getAuthUserAgentValue(AuthAction.UpdateUserAttributes)\n    }, {\n      AccessToken: tokens.accessToken.toString(),\n      ClientMetadata: clientMetadata,\n      UserAttributes: toAttributeType(userAttributes)\n    });\n    return {\n      ...getConfirmedAttributes(userAttributes),\n      ...getUnConfirmedAttributes(CodeDeliveryDetailsList)\n    };\n  });\n  return function updateUserAttributes(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nfunction getConfirmedAttributes(attributes) {\n  const confirmedAttributes = {};\n  Object.keys(attributes)?.forEach(key => {\n    confirmedAttributes[key] = {\n      isUpdated: true,\n      nextStep: {\n        updateAttributeStep: 'DONE'\n      }\n    };\n  });\n  return confirmedAttributes;\n}\nfunction getUnConfirmedAttributes(codeDeliveryDetailsList) {\n  const unConfirmedAttributes = {};\n  codeDeliveryDetailsList?.forEach(codeDeliveryDetails => {\n    const {\n      AttributeName,\n      DeliveryMedium,\n      Destination\n    } = codeDeliveryDetails;\n    if (AttributeName) unConfirmedAttributes[AttributeName] = {\n      isUpdated: false,\n      nextStep: {\n        updateAttributeStep: 'CONFIRM_ATTRIBUTE_WITH_CODE',\n        codeDeliveryDetails: {\n          attributeName: AttributeName,\n          deliveryMedium: DeliveryMedium,\n          destination: Destination\n        }\n      }\n    };\n  });\n  return unConfirmedAttributes;\n}\nexport { updateUserAttributes };\n//# sourceMappingURL=updateUserAttributes.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}