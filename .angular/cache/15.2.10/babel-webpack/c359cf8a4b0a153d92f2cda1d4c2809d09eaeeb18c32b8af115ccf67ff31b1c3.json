{"ast":null,"code":"import { Renderer2, ElementRef } from '@angular/core';\nimport { ROUTES } from '../.././sidebar/sidebar.component';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { filter } from 'rxjs';\nimport { AppComponent } from 'app/app.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"app/app.component\";\nimport * as i4 from \"@ngx-translate/core\";\nconst _c0 = [\"navbar-cmp\"];\nconst _c1 = function (a0, a1) {\n  return {\n    \"bg-white\": a0,\n    \"navbar-transparent\": a1\n  };\n};\nvar misc = {\n  navbar_menu_visible: 0,\n  active_collapse: true,\n  disabled_collapse_init: 0\n};\nexport let NavbarComponent = /*#__PURE__*/(() => {\n  class NavbarComponent {\n    renderer;\n    element;\n    router;\n    root;\n    listTitles;\n    location;\n    nativeElement;\n    toggleButton;\n    sidebarVisible;\n    _router;\n    open = false;\n    button;\n    selectedLanguage;\n    constructor(location, renderer, element, router, root) {\n      this.renderer = renderer;\n      this.element = element;\n      this.router = router;\n      this.root = root;\n      this.location = location;\n      this.nativeElement = element.nativeElement;\n      this.sidebarVisible = false;\n    }\n    ngOnInit() {\n      this.listTitles = ROUTES.filter(listTitle => listTitle);\n      const navbar = this.element.nativeElement;\n      const body = document.getElementsByTagName('body')[0];\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggler')[0];\n      if (body.classList.contains('sidebar-mini')) {\n        misc.sidebar_mini_active = true;\n      }\n      this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n        const $layer = document.getElementsByClassName('close-layer')[0];\n        if ($layer) {\n          $layer.remove();\n        }\n      });\n    }\n    minimizeSidebar() {\n      const body = document.getElementsByTagName('body')[0];\n      if (misc.sidebar_mini_active === true) {\n        body.classList.remove('sidebar-mini');\n        misc.sidebar_mini_active = false;\n      } else {\n        setTimeout(function () {\n          body.classList.add('sidebar-mini');\n          misc.sidebar_mini_active = true;\n        }, 300);\n      }\n      // we simulate the window Resize so the charts will get updated in realtime.\n      const simulateWindowResize = setInterval(function () {\n        window.dispatchEvent(new Event('resize'));\n      }, 180);\n      // we stop the simulation of Window Resize after the animations are completed\n      setTimeout(function () {\n        clearInterval(simulateWindowResize);\n      }, 1000);\n    }\n    isMobileMenu() {\n      if (window.outerWidth < 991) {\n        return false;\n      }\n      return true;\n    }\n    sidebarOpen() {\n      var toggleButton = this.toggleButton;\n      var html = document.getElementsByTagName('html')[0];\n      setTimeout(function () {\n        toggleButton.classList.add('toggled');\n      }, 500);\n      const mainPanel = document.getElementsByClassName('main-panel')[0];\n      if (window.innerWidth < 991) {\n        mainPanel.style.position = 'fixed';\n      }\n      html.classList.add('nav-open');\n      this.sidebarVisible = true;\n    }\n    sidebarClose() {\n      var html = document.getElementsByTagName('html')[0];\n      this.toggleButton.classList.remove('toggled');\n      this.sidebarVisible = false;\n      html.classList.remove('nav-open');\n      const mainPanel = document.getElementsByClassName('main-panel')[0];\n      if (window.innerWidth < 991) {\n        setTimeout(function () {\n          mainPanel.style.position = '';\n        }, 500);\n      }\n    }\n    sidebarToggle() {\n      // var toggleButton = this.toggleButton;\n      // var body = document.getElementsByTagName('body')[0];\n      if (this.sidebarVisible == false) {\n        this.sidebarOpen();\n      } else {\n        this.sidebarClose();\n      }\n    }\n    getTitle() {\n      var titlee = this.location.prepareExternalUrl(this.location.path());\n      if (titlee.charAt(0) === '#') {\n        titlee = titlee.slice(1);\n      }\n      for (var item = 0; item < this.listTitles.length; item++) {\n        var parent = this.listTitles[item];\n        if (parent.path === titlee) {\n          return parent.title;\n        } else if (parent.children) {\n          var children_from_url = titlee.split(\"/\")[2];\n          for (var current = 0; current < parent.children.length; current++) {\n            if (parent.children[current].path === children_from_url) {\n              return parent.children[current].title;\n            }\n          }\n        }\n      }\n      return 'Dashboard';\n    }\n    getPath() {\n      // console.log(this.location);\n      return this.location.prepareExternalUrl(this.location.path());\n    }\n    switchLanguage(language) {\n      this.selectedLanguage = language;\n      this.root.switchLanguage(language);\n    }\n    static ɵfac = function NavbarComponent_Factory(t) {\n      return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AppComponent));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NavbarComponent,\n      selectors: [[\"navbar-cmp\"]],\n      viewQuery: function NavbarComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.button = _t.first);\n        }\n      },\n      decls: 40,\n      vars: 13,\n      consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-absolute\", 3, \"ngClass\"], [\"navbar\", \"\"], [1, \"container-fluid\"], [1, \"navbar-wrapper\"], [1, \"navbar-minimize\"], [\"id\", \"minimizeSidebar\", 1, \"btn\", \"btn-icon\", \"btn-round\", 3, \"click\"], [1, \"nc-icon\", \"nc-minimal-right\", \"text-center\", \"visible-on-sidebar-mini\"], [1, \"nc-icon\", \"nc-minimal-left\", \"text-center\", \"visible-on-sidebar-regular\"], [1, \"navbar-toggle\", 3, \"click\"], [\"type\", \"button\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-bar\", \"bar1\"], [1, \"navbar-toggler-bar\", \"bar2\"], [1, \"navbar-toggler-bar\", \"bar3\"], [\"href\", \"javascript:void(0)\", 1, \"navbar-brand\"], [\"type\", \"button\", \"data-toggle\", \"collapse\", \"data-target\", \"#navigation\", \"aria-controls\", \"navigation-index\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\", 3, \"click\"], [1, \"navbar-toggler-bar\", \"navbar-kebab\"], [\"id\", \"navigation\", 1, \"collapse\", \"navbar-collapse\", \"justify-content-end\"], [1, \"navbar-nav\"], [1, \"nav-item\", \"star-clickable\"], [1, \"nav-link\", \"btn-rotate\", 3, \"click\"], [\"src\", \"../../../assets/img/GB.png\", \"alt\", \"Flag 1\"], [1, \"d-lg-none\", \"d-md-block\"], [\"src\", \"../../../assets/img/DE.png\", \"alt\", \"Flag 2\"], [\"src\", \"../../../assets/img/flags/FR.png\", \"alt\", \"Flag 3\"]],\n      template: function NavbarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nav\", 0, 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_5_listener() {\n            return ctx.minimizeSidebar();\n          });\n          i0.ɵɵelement(6, \"i\", 6)(7, \"i\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 8);\n          i0.ɵɵlistener(\"click\", function NavbarComponent_Template_div_click_8_listener() {\n            return ctx.sidebarToggle();\n          });\n          i0.ɵɵelementStart(9, \"button\", 9);\n          i0.ɵɵelement(10, \"span\", 10)(11, \"span\", 11)(12, \"span\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"a\", 13);\n          i0.ɵɵtext(14);\n          i0.ɵɵpipe(15, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"button\", 14);\n          i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_16_listener() {\n            return ctx.open = !ctx.open;\n          });\n          i0.ɵɵelement(17, \"span\", 15)(18, \"span\", 15)(19, \"span\", 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 16)(21, \"ul\", 17)(22, \"li\", 18)(23, \"a\", 19);\n          i0.ɵɵlistener(\"click\", function NavbarComponent_Template_a_click_23_listener() {\n            return ctx.switchLanguage(\"en\");\n          });\n          i0.ɵɵelement(24, \"img\", 20);\n          i0.ɵɵelementStart(25, \"p\")(26, \"span\", 21);\n          i0.ɵɵtext(27, \" English\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(28, \"li\", 18)(29, \"a\", 19);\n          i0.ɵɵlistener(\"click\", function NavbarComponent_Template_a_click_29_listener() {\n            return ctx.switchLanguage(\"de\");\n          });\n          i0.ɵɵelement(30, \"img\", 22);\n          i0.ɵɵelementStart(31, \"p\")(32, \"span\", 21);\n          i0.ɵɵtext(33, \" Deutsch\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(34, \"li\", 18)(35, \"a\", 19);\n          i0.ɵɵlistener(\"click\", function NavbarComponent_Template_a_click_35_listener() {\n            return ctx.switchLanguage(\"fr\");\n          });\n          i0.ɵɵelement(36, \"img\", 23);\n          i0.ɵɵelementStart(37, \"p\")(38, \"span\", 21);\n          i0.ɵɵtext(39, \" Francais\");\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(10, _c1, ctx.open === true, ctx.open === false));\n          i0.ɵɵadvance(14);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(15, 8, ctx.getTitle()));\n          i0.ɵɵadvance(8);\n          i0.ɵɵclassProp(\"active\", ctx.selectedLanguage === \"en\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"active\", ctx.selectedLanguage === \"de\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"active\", ctx.selectedLanguage === \"fr\");\n        }\n      },\n      dependencies: [i1.NgClass, i4.TranslatePipe],\n      encapsulation: 2\n    });\n  }\n  return NavbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}