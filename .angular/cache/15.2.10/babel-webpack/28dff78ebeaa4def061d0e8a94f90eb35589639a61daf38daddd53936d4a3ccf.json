{"ast":null,"code":"import { getHashedDataAsHex } from './dataHashHelpers.mjs';\nimport { getCanonicalRequest } from './getCanonicalRequest.mjs';\nimport { getSigningKey } from './getSigningKey.mjs';\nimport { getStringToSign } from './getStringToSign.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculates and returns an AWS API Signature.\n * https://docs.aws.amazon.com/IAM/latest/UserGuide/create-signed-request.html\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns AWS API Signature to sign a request or url with.\n *\n * @internal\n */\nconst getSignature = (request, {\n  credentialScope,\n  longDate,\n  secretAccessKey,\n  shortDate,\n  signingRegion,\n  signingService,\n  uriEscapePath\n}) => {\n  // step 1: create a canonical request\n  const canonicalRequest = getCanonicalRequest(request, uriEscapePath);\n  // step 2: create a hash of the canonical request\n  const hashedRequest = getHashedDataAsHex(null, canonicalRequest);\n  // step 3: create a string to sign\n  const stringToSign = getStringToSign(longDate, credentialScope, hashedRequest);\n  // step 4: calculate the signature\n  const signature = getHashedDataAsHex(getSigningKey(secretAccessKey, shortDate, signingRegion, signingService), stringToSign);\n  return signature;\n};\nexport { getSignature };\n//# sourceMappingURL=getSignature.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}