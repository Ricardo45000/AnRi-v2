{"ast":null,"code":"import { PinpointEventBuffer } from './PinpointEventBuffer.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Map of buffers by region -> appId\nconst eventBufferMap = {};\n/**\n * Returns a PinpointEventBuffer instance for the specified region & app ID, creating one if it does not yet exist.\n *\n * @internal\n */\nconst getEventBuffer = ({\n  appId,\n  region,\n  credentials,\n  bufferSize,\n  flushInterval,\n  flushSize,\n  resendLimit,\n  identityId,\n  userAgentValue\n}) => {\n  if (eventBufferMap[region]?.[appId]) {\n    const buffer = eventBufferMap[region][appId];\n    /*\n    If the identity has changed flush out the buffer and create a new instance. The old instance will be garbage\n    collected.\n    */\n    if (buffer.identityHasChanged(identityId)) {\n      buffer.flush();\n    } else {\n      return buffer;\n    }\n  }\n  const buffer = new PinpointEventBuffer({\n    appId,\n    bufferSize,\n    credentials,\n    flushInterval,\n    flushSize,\n    identityId,\n    region,\n    resendLimit,\n    userAgentValue\n  });\n  if (!eventBufferMap[region]) {\n    eventBufferMap[region] = {};\n  }\n  eventBufferMap[region][appId] = buffer;\n  return buffer;\n};\nexport { getEventBuffer };\n//# sourceMappingURL=getEventBuffer.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}