{"ast":null,"code":"import { Hub } from 'aws-amplify/utils';\nimport '@aws-amplify/core/internals/utils';\nimport '../../utils/setUserAgent/constants.mjs';\nimport { isFunction } from '../../utils/utils.mjs';\n\n/**\n * Handles Amplify JS Auth hub events, by forwarding hub events as appropriate\n * xstate events.\n */\nconst defaultAuthHubHandler = ({\n  payload\n}, service, options) => {\n  const {\n    event\n  } = payload;\n  const {\n    send\n  } = service;\n  const {\n    onSignIn,\n    onSignOut\n  } = options ?? {};\n  switch (event) {\n    case 'signedIn':\n      {\n        if (isFunction(onSignIn)) {\n          onSignIn(payload);\n        }\n        break;\n      }\n    case 'signInWithRedirect':\n      {\n        send('SIGN_IN_WITH_REDIRECT');\n        break;\n      }\n    case 'signedOut':\n    case 'tokenRefresh_failure':\n      {\n        if (event === 'signedOut' && isFunction(onSignOut)) {\n          onSignOut();\n        }\n        send('SIGN_OUT');\n        break;\n      }\n  }\n};\n/**\n * Listens to external auth Hub events and sends corresponding event to\n * the `service.send` of interest\n *\n * @param service - contains state machine `send` function\n * @param handler - auth event handler\n * @returns function that unsubscribes to the hub evenmt\n */\nconst listenToAuthHub = (service, handler = defaultAuthHubHandler) => {\n  const eventHandler = data => handler(data, service);\n  return Hub.listen('auth', eventHandler, 'authenticator-hub-handler');\n};\nexport { defaultAuthHubHandler, listenToAuthHub };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}