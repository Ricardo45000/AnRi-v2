{"ast":null,"code":"import { AuthError } from '../../../errors/AuthError.mjs';\nimport { TOKEN_REFRESH_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, DEVICE_METADATA_NOT_FOUND_EXCEPTION } from '../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction isTypeUserPoolConfig(authConfig) {\n  if (authConfig && authConfig.Cognito.userPoolId && authConfig.Cognito.userPoolClientId) {\n    return true;\n  }\n  return false;\n}\nfunction assertAuthTokens(tokens) {\n  if (!tokens || !tokens.accessToken) {\n    throw new AuthError({\n      name: USER_UNAUTHENTICATED_EXCEPTION,\n      message: 'User needs to be authenticated to call this API.',\n      recoverySuggestion: 'Sign in before calling this API again.'\n    });\n  }\n}\nfunction assertIdTokenInAuthTokens(tokens) {\n  if (!tokens || !tokens.idToken) {\n    throw new AuthError({\n      name: USER_UNAUTHENTICATED_EXCEPTION,\n      message: 'User needs to be authenticated to call this API.',\n      recoverySuggestion: 'Sign in before calling this API again.'\n    });\n  }\n}\nconst oAuthTokenRefreshException = new AuthError({\n  name: TOKEN_REFRESH_EXCEPTION,\n  message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. \n\tPlease change your oauth configuration to use 'code grant' flow.`,\n  recoverySuggestion: `Please logout and change your Amplify configuration to use \"code grant\" flow. \n\tE.g { responseType: 'code' }`\n});\nconst tokenRefreshException = new AuthError({\n  name: USER_UNAUTHENTICATED_EXCEPTION,\n  message: 'User needs to be authenticated to call this API.',\n  recoverySuggestion: 'Sign in before calling this API again.'\n});\nfunction assertAuthTokensWithRefreshToken(tokens) {\n  if (isAuthenticatedWithImplicitOauthFlow(tokens)) {\n    throw oAuthTokenRefreshException;\n  }\n  if (!isAuthenticatedWithRefreshToken(tokens)) {\n    throw tokenRefreshException;\n  }\n}\nfunction assertDeviceMetadata(deviceMetadata) {\n  if (!deviceMetadata || !deviceMetadata.deviceKey || !deviceMetadata.deviceGroupKey || !deviceMetadata.randomPassword) {\n    throw new AuthError({\n      name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n      message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n      recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.'\n    });\n  }\n}\nconst OAuthStorageKeys = {\n  inflightOAuth: 'inflightOAuth',\n  oauthSignIn: 'oauthSignIn',\n  oauthPKCE: 'oauthPKCE',\n  oauthState: 'oauthState'\n};\nfunction isAuthenticated(tokens) {\n  return tokens?.accessToken || tokens?.idToken;\n}\nfunction isAuthenticatedWithRefreshToken(tokens) {\n  return isAuthenticated(tokens) && tokens?.refreshToken;\n}\nfunction isAuthenticatedWithImplicitOauthFlow(tokens) {\n  return isAuthenticated(tokens) && !tokens?.refreshToken;\n}\nexport { OAuthStorageKeys, assertAuthTokens, assertAuthTokensWithRefreshToken, assertDeviceMetadata, assertIdTokenInAuthTokens, isTypeUserPoolConfig, oAuthTokenRefreshException, tokenRefreshException };\n//# sourceMappingURL=types.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}