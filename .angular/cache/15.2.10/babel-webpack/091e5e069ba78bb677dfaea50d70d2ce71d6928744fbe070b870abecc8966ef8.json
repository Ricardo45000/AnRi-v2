{"ast":null,"code":"import _asyncToGenerator from \"/Users/ricardoda-silva/Desktop/Project/RiAn/AnRi v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// airtable.service.ts\nimport { HttpClient } from '@angular/common/http';\nimport { AuthserviceService } from './authservice.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./authservice.service\";\nexport let AirtableService = /*#__PURE__*/(() => {\n  class AirtableService {\n    http;\n    authService;\n    records = null;\n    apiUrl = 'https://tsy94v6k27.execute-api.eu-west-3.amazonaws.com/prod';\n    constructor(http, authService) {\n      this.http = http;\n      this.authService = authService;\n    }\n    // Fetch records from Airtable via server-side endpoint\n    getRecords() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (_this.records === null) {\n          try {\n            // Make HTTP GET request to the server's /records endpoint\n            const response = yield _this.http.get(`${_this.apiUrl}/records?tableName=${_this.authService.myTable}`).toPromise();\n            _this.records = response;\n          } catch (error) {\n            console.error('Error fetching records:', error);\n            throw error; // Re-throw error for error handling in components\n          }\n        }\n\n        return _this.records || [];\n      })();\n    }\n    static ɵfac = function AirtableService_Factory(t) {\n      return new (t || AirtableService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthserviceService));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AirtableService,\n      factory: AirtableService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AirtableService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}