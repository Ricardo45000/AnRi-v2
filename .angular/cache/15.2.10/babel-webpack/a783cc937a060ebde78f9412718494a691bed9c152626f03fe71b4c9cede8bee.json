{"ast":null,"code":"import _asyncToGenerator from \"/Users/ricardoda-silva/Desktop/Project/RiAn/AnRi v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getUserAttributeVerificationCode } from '../utils/clients/CognitoIdentityProvider/index.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resends user's confirmation code when updating attributes while authenticated.\n *\n * @param input - The SendUserAttributeVerificationCodeInput object\n * @returns SendUserAttributeVerificationCodeOutput\n * @throws - {@link GetUserAttributeVerificationException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst sendUserAttributeVerificationCode = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (input) {\n    const {\n      userAttributeKey,\n      options\n    } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const clientMetadata = options?.clientMetadata;\n    assertTokenProviderConfig(authConfig);\n    const {\n      tokens\n    } = yield fetchAuthSession({\n      forceRefresh: false\n    });\n    assertAuthTokens(tokens);\n    const {\n      CodeDeliveryDetails\n    } = yield getUserAttributeVerificationCode({\n      region: getRegion(authConfig.userPoolId),\n      userAgentValue: getAuthUserAgentValue(AuthAction.SendUserAttributeVerificationCode)\n    }, {\n      AccessToken: tokens.accessToken.toString(),\n      ClientMetadata: clientMetadata,\n      AttributeName: userAttributeKey\n    });\n    const {\n      DeliveryMedium,\n      AttributeName,\n      Destination\n    } = {\n      ...CodeDeliveryDetails\n    };\n    return {\n      destination: Destination,\n      deliveryMedium: DeliveryMedium,\n      attributeName: AttributeName\n    };\n  });\n  return function sendUserAttributeVerificationCode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport { sendUserAttributeVerificationCode };\n//# sourceMappingURL=sendUserAttributeVerificationCode.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}