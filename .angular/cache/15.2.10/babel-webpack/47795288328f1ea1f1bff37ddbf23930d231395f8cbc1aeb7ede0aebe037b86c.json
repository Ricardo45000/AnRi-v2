{"ast":null,"code":"import { currentSizeKey } from '../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * return the byte size of the string\n * @param str\n */\nfunction getByteLength(str) {\n  let ret = 0;\n  ret = str.length;\n  for (let i = str.length; i >= 0; i -= 1) {\n    const charCode = str.charCodeAt(i);\n    if (charCode > 0x7f && charCode <= 0x7ff) {\n      ret += 1;\n    } else if (charCode > 0x7ff && charCode <= 0xffff) {\n      ret += 2;\n    }\n    // trail surrogate\n    if (charCode >= 0xdc00 && charCode <= 0xdfff) {\n      i -= 1;\n    }\n  }\n  return ret;\n}\n/**\n * get current time\n */\nfunction getCurrentTime() {\n  const currentTime = new Date();\n  return currentTime.getTime();\n}\n/**\n * check if passed value is an integer\n */\nfunction isInteger(value) {\n  if (Number.isInteger) {\n    return Number.isInteger(value);\n  }\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\nconst getCurrentSizeKey = keyPrefix => `${keyPrefix}${currentSizeKey}`;\nexport { getByteLength, getCurrentSizeKey, getCurrentTime, isInteger };\n//# sourceMappingURL=cacheHelpers.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}