{"ast":null,"code":"import '../../types/authenticator/user.mjs';\nimport { authFieldsWithDefaults } from '../../types/authenticator/attributes.mjs';\nconst getFormDataFromEvent = event => {\n  const formData = new FormData(event.target);\n  return Object.fromEntries(formData);\n};\nconst setFormOrder = (formOverrides, fieldNames) => {\n  let orderedKeys = [];\n  if (formOverrides) {\n    orderedKeys = Object.keys(formOverrides).reduce((prev, key) => {\n      // reduce to array that can be sorted\n      prev.push([key, formOverrides[key]?.order]);\n      return prev;\n    }, []).sort((a, b) =>\n    //sort them based on order\n    a[1] - b[1]) // returned just key\n    .filter(a => a[1] !== undefined).map(a => a[0]);\n  }\n  // remove duplicates\n  return Array.from(new Set([...orderedKeys, ...fieldNames]));\n};\nconst isAuthFieldWithDefaults = field => {\n  return authFieldsWithDefaults.includes(field);\n};\nconst isArray = val => {\n  return Array.isArray(val);\n};\nconst getErrors = errors => {\n  if (!errors) return null;\n  if (isArray(errors)) {\n    return errors;\n  } else {\n    return [errors];\n  }\n};\nexport { getErrors, getFormDataFromEvent, isAuthFieldWithDefaults, setFormOrder };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}