{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, ViewChild } from '@angular/core';\nimport { NavbarComponent } from '../../shared/navbar/navbar.component';\nimport { Location } from '@angular/common';\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { filter } from 'rxjs';\nlet AdminLayoutComponent = class AdminLayoutComponent {\n  router;\n  _router;\n  // url: string;\n  url;\n  location;\n  lastPoppedUrl;\n  yScrollStack = [];\n  sidebar;\n  navbar;\n  constructor(router, location) {\n    this.router = router;\n    this.location = location;\n  }\n  ngOnInit() {\n    const elemMainPanel = document.querySelector('.main-panel');\n    const elemSidebar = document.querySelector('.sidebar .sidebar-wrapper');\n    this.location.subscribe(ev => {\n      this.lastPoppedUrl = ev.url;\n    });\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        if (event.url != this.lastPoppedUrl) this.yScrollStack.push(window.scrollY);\n      } else if (event instanceof NavigationEnd) {\n        if (event.url == this.lastPoppedUrl) {\n          this.lastPoppedUrl = undefined;\n          window.scrollTo(0, this.yScrollStack.pop());\n        } else window.scrollTo(0, 0);\n      }\n    });\n    this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n      elemMainPanel.scrollTop = 0;\n      elemSidebar.scrollTop = 0;\n    });\n    const html = document.getElementsByTagName('html')[0];\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n      let ps = new PerfectScrollbar(elemMainPanel);\n      ps = new PerfectScrollbar(elemSidebar);\n      html.classList.add('perfect-scrollbar-on');\n    } else {\n      html.classList.add('perfect-scrollbar-off');\n    }\n    this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n      this.navbar.sidebarClose();\n    });\n  }\n  isMap() {\n    // console.log(this.location.prepareExternalUrl(this.location.path()));\n    if (this.location.prepareExternalUrl(this.location.path()) == '#/maps/fullscreen') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  isMac() {\n    let bool = false;\n    if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\n      bool = true;\n    }\n    return bool;\n  }\n};\n__decorate([ViewChild('sidebar', {\n  static: false\n}), __metadata(\"design:type\", Object)], AdminLayoutComponent.prototype, \"sidebar\", void 0);\n__decorate([ViewChild(NavbarComponent, {\n  static: false\n}), __metadata(\"design:type\", NavbarComponent)], AdminLayoutComponent.prototype, \"navbar\", void 0);\nAdminLayoutComponent = __decorate([Component({\n  selector: 'app-layout',\n  templateUrl: './admin-layout.component.html'\n}), __metadata(\"design:paramtypes\", [Router, Location])], AdminLayoutComponent);\nexport { AdminLayoutComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}