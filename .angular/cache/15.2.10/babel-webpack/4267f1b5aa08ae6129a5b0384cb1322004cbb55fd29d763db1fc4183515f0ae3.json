{"ast":null,"code":"import _asyncToGenerator from \"/Users/ricardoda-silva/Desktop/Project/RiAn/AnRi v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { deDupeAsyncFunction, assertTokenProviderConfig, decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { initiateAuth } from './clients/CognitoIdentityProvider/index.mjs';\nimport { getRegion } from './clients/CognitoIdentityProvider/utils.mjs';\nimport { assertAuthTokensWithRefreshToken } from './types.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { getUserContextData } from './userContextData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst refreshAuthTokensFunction = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* ({\n    tokens,\n    authConfig,\n    username\n  }) {\n    assertTokenProviderConfig(authConfig?.Cognito);\n    const region = getRegion(authConfig.Cognito.userPoolId);\n    assertAuthTokensWithRefreshToken(tokens);\n    const refreshTokenString = tokens.refreshToken;\n    const AuthParameters = {\n      REFRESH_TOKEN: refreshTokenString\n    };\n    if (tokens.deviceMetadata?.deviceKey) {\n      AuthParameters.DEVICE_KEY = tokens.deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n      username,\n      userPoolId: authConfig.Cognito.userPoolId,\n      userPoolClientId: authConfig.Cognito.userPoolClientId\n    });\n    const {\n      AuthenticationResult\n    } = yield initiateAuth({\n      region\n    }, {\n      ClientId: authConfig?.Cognito?.userPoolClientId,\n      AuthFlow: 'REFRESH_TOKEN_AUTH',\n      AuthParameters,\n      UserContextData\n    });\n    const accessToken = decodeJWT(AuthenticationResult?.AccessToken ?? '');\n    const idToken = AuthenticationResult?.IdToken ? decodeJWT(AuthenticationResult.IdToken) : undefined;\n    const {\n      iat\n    } = accessToken.payload;\n    // This should never happen. If it does, it's a bug from the service.\n    if (!iat) {\n      throw new AuthError({\n        name: 'iatNotFoundException',\n        message: 'iat not found in access token'\n      });\n    }\n    const clockDrift = iat * 1000 - new Date().getTime();\n    return {\n      accessToken,\n      idToken,\n      clockDrift,\n      refreshToken: refreshTokenString,\n      username\n    };\n  });\n  return function refreshAuthTokensFunction(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst refreshAuthTokens = deDupeAsyncFunction(refreshAuthTokensFunction);\nexport { refreshAuthTokens };\n//# sourceMappingURL=refreshAuthTokens.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}